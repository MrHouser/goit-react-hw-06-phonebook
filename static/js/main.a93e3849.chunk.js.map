{"version":3,"sources":["components/Form/Form.module.css","components/Search/Search.module.css","redux/actions.js","components/Form/Form.js","components/Contacts/Contact.js","components/Contacts/Contacts.js","components/Search/Search.js","App.js","redux/contactsReducer.js","redux/filterReducer.js","redux/store.js","index.js","components/Contacts/Contacts.module.css"],"names":["module","exports","addContact","createAction","deleteContact","filterContacts","Form","contactList","dispatch","useDispatch","useState","name","setName","number","setNumber","handleInputChange","event","target","inputName","value","reset","onSubmit","contacts","map","contact","toLowerCase","preventDefault","includes","Toastr","actions","type","onChange","pattern","title","required","className","s","input","button","Contact","id","item","text","onClick","Contacts","list","Search","label","App","useSelector","state","items","filter","lowerCasedFilter","filteredContacts","contactsReducer","createReducer","payload","shortid","generate","filterReducer","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a93e3849.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__245T0\",\"button\":\"Form_button__1PpvS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Search_label__3Uh3u\",\"input\":\"Search_input__3aviL\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add');\nexport const deleteContact = createAction('contacts/delete');\nexport const filterContacts = createAction('filter/filter');\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as Toastr from 'toastr';\nimport * as actions from '../../redux/actions';\nimport '../../../node_modules/toastr/build/toastr.css';\nimport s from './Form.module.css';\n\nfunction Form({ contactList }) {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name: inputName, value } = event.target;\n\n    if (inputName === 'name') {\n      setName(value);\n    } else if (inputName === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = event => {\n    const contacts = contactList.map(contact => contact.name.toLowerCase());\n\n    event.preventDefault();\n\n    if (contacts.includes(name.toLowerCase())) {\n      Toastr.error(`${name} is already in contacts`);\n      reset();\n      return;\n    }\n    dispatch(actions.addContact({ name, number }));\n    reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            className={s.input}\n          />\n        </label>\n        <label>\n          Number:\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            className={s.input}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default Form;\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n  contactList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as actions from '../../redux/actions';\nimport s from './Contacts.module.css';\n\nfunction Contact({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={s.item}>\n      <p className={s.text}>\n        {name}: {number}\n      </p>\n      <button\n        type=\"button\"\n        onClick={() => dispatch(actions.deleteContact(id))}\n        className={s.button}\n      >\n        X\n      </button>\n    </li>\n  );\n}\n\nexport default Contact;\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n};\n","import s from './Contacts.module.css';\nimport PropTypes from 'prop-types';\nimport Contact from './Contact';\n\nfunction Contacts({ contacts }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <Contact\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default Contacts;\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDelete: PropTypes.func,\n};\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as actions from '../../redux/actions';\nimport s from './Search.module.css';\n\nfunction Search({ value }) {\n  const dispatch = useDispatch();\n  return (\n    <label className={s.label}>\n      Find contacts by name:\n      <input\n        type=\"text\"\n        value={value}\n        onChange={event => dispatch(actions.filterContacts(event.target.value))}\n        className={s.input}\n      ></input>\n    </label>\n  );\n}\n\nexport default Search;\n\nSearch.propTypes = {\n  value: PropTypes.string,\n  onSearch: PropTypes.func,\n};\n","import { useSelector } from 'react-redux';\nimport Form from './components/Form/Form';\nimport Contacts from './components/Contacts/Contacts';\nimport Search from './components/Search/Search';\n\nfunction App() {\n  const contacts = useSelector(state => state.items);\n  const filter = useSelector(state => state.filter);\n\n  const lowerCasedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(lowerCasedFilter),\n  );\n\n  return (\n    <div className=\"wrapper\">\n      <h1 className=\"main-title\">Phonebook</h1>\n      <Form contactList={contacts} />\n      <h2 className=\"title\">Contacts</h2>\n      <Search value={filter} />\n      <Contacts contacts={filteredContacts} />\n    </div>\n  );\n}\n\nexport default App;\n","import shortid from 'shortid';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact } from './actions';\n\nconst contactsReducer = createReducer(\n  [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  {\n    [addContact]: (state, { payload }) => [\n      ...state,\n      {\n        id: shortid.generate(),\n        ...payload,\n      },\n    ],\n    [deleteContact]: (state, { payload }) =>\n      state.filter(contact => contact.id !== payload),\n  },\n);\n\nexport default contactsReducer;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { filterContacts } from './actions';\n\nconst filterReducer = createReducer('', {\n  [filterContacts]: (state, { payload }) => payload,\n});\n\nexport default filterReducer;\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contactsReducer';\nimport filterReducer from './filterReducer';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst rootReducer = combineReducers({\n  items: contactsReducer,\n  filter: filterReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__2UUFs\",\"text\":\"Contacts_text__3hI9V\",\"item\":\"Contacts_item__2Sgxr\",\"button\":\"Contacts_button__2uaeh\"};"],"sourceRoot":""}